<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/security 
		https://www.springframework.org/schema/security/spring-security.xsd 
		http://www.springframework.org/schema/beans 
		https://www.springframework.org/schema/beans/spring-beans.xsd">
		
	<!-- access config -->
	<http>
		<intercept-url pattern="/" access="permitAll()" />
		<intercept-url pattern="/home" access="permitAll()" />
		<intercept-url pattern="/login" access="permitAll()" />
		<intercept-url pattern="/register" access="permitAll()" />
		<intercept-url pattern="/resources/**" access="permitAll()" />
		<intercept-url pattern="/admin" access="hasRole('ADMIN')" />
		<intercept-url pattern="/**" access="isAuthenticated()" />
		<form-login 
			login-page="/login" 
			username-parameter="memberId" password-parameter="passwd" 
			default-target-url="/home" /> <!-- 아예 처음부터 로그인을 클릭해서 들어온 경우 경로 설정해주는 것  -->
		<access-denied-handler error-page="/access-denied" />
		<logout 
			logout-url="/logout" 
			logout-success-url="/home" 
			invalidate-session="true"
			delete-cookies="JSESSIONID" />
		<csrf disabled="true" />
	</http>
	
	<!-- provider -->
	<authentication-manager>
		<authentication-provider>
			<password-encoder ref="bcryptEncoder" />	
			<jdbc-user-service data-source-ref="dataSource"
							   users-by-username-query="SELECT memberid, passwd, active
							   							FROM member WHERE memberid = ?" 
							   authorities-by-username-query="SELECT m.memberid, r.rolename
							   								  FROM member m
							   								  INNER JOIN member_role mr 
							   								  ON m.memberid = mr.memberid 
							   								  INNER JOIN t_role r 
							   								  ON r.roleno = mr.roleno
							   								  WHERE m.memberid = ? "/>
		</authentication-provider>
	</authentication-manager>
	
</beans:beans>
